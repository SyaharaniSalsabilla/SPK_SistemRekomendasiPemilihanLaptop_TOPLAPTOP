/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import java.awt.Frame;
import java.awt.HeadlessException;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishom
 */
public class SPK extends javax.swing.JFrame {

    /**
     * Creates new form SPK
     */
    public SPK() {
        initComponents();

        setLocationRelativeTo(null);
//        setExtendedState(Frame.MAXIMIZED_BOTH);

        loadAlternatif();
        loadKriteria();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jAlternatif = new javax.swing.JTextField();
        jHarga = new javax.swing.JTextField();
        jJP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jKM = new javax.swing.JTextField();
        jTM = new javax.swing.JTextField();
        jKH = new javax.swing.JTextField();
        jUL = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        buttonTrans1 = new app.ButtonTrans();
        buttonTrans3 = new app.ButtonTrans();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabelAlternatif = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        buttonTrans2 = new app.ButtonTrans();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelKriteria = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jKriteria = new javax.swing.JTextField();
        jBobot = new javax.swing.JTextField();
        jLabel = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        buttonTrans5 = new app.ButtonTrans();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelNormalisasi = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelSPK = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Ink Free", 1, 50)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TOPLAPTOP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(748, 50));

        jLabel4.setFont(new java.awt.Font("Ink Free", 1, 30)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sahabat Anda Memilih Laptop");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.setBackground(new java.awt.Color(204, 255, 204));

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(204, 255, 204));

        jLabel6.setText("Nama Alternatif");

        jLabel7.setText("Harga");

        jLabel8.setText("Jenis Prosesor");

        jLabel9.setText("Kapasitas Memori");

        jLabel10.setText("Tipe Memori");

        jLabel11.setText("Kapasitas Harddisk");

        jLabel12.setText("Ukuran Layar");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jJP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jKM, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTM, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jKH, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jUL, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jJP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel9, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setPreferredSize(new java.awt.Dimension(748, 50));

        buttonTrans1.setText("+ Alternatif");
        buttonTrans1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrans1ActionPerformed(evt);
            }
        });

        buttonTrans3.setText("Edit");
        buttonTrans3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrans3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonTrans1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonTrans3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(555, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTrans1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(buttonTrans3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 204));

        jtabelAlternatif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtabelAlternatif.setGridColor(new java.awt.Color(204, 255, 204));
        jtabelAlternatif.setMinimumSize(new java.awt.Dimension(60, 50));
        jtabelAlternatif.setPreferredSize(new java.awt.Dimension(300, 50));
        jtabelAlternatif.setSelectionBackground(new java.awt.Color(204, 255, 204));
        jtabelAlternatif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabelAlternatifMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtabelAlternatif);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Alternatif", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));
        jPanel7.setPreferredSize(new java.awt.Dimension(748, 50));

        buttonTrans2.setText("+ Kriteria");
        buttonTrans2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrans2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonTrans2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(671, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonTrans2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setBackground(new java.awt.Color(204, 255, 204));

        tabelKriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelKriteria);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));

        jLabel13.setText("Kriteria");

        jLabel14.setText("Bobot");

        jLabel15.setText("Label");

        jLabel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cost", "Benefit" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBobot, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(478, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jBobot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel10, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Kriteria", jPanel4);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(204, 255, 204));
        jPanel12.setPreferredSize(new java.awt.Dimension(748, 50));

        buttonTrans5.setText("Lakukan Proses SPK");
        buttonTrans5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTrans5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonTrans5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(619, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonTrans5, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        jScrollPane4.setBackground(new java.awt.Color(204, 255, 204));

        tabelNormalisasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelNormalisasi.setMaximumSize(new java.awt.Dimension(2000000000, 80));
        jScrollPane4.setViewportView(tabelNormalisasi);

        jPanel11.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Normalisasi", jPanel11);

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));
        jPanel8.setPreferredSize(new java.awt.Dimension(748, 50));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jScrollPane3.setBackground(new java.awt.Color(204, 255, 204));

        tabelSPK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelSPK.setMaximumSize(new java.awt.Dimension(2000000000, 80));
        jScrollPane3.setViewportView(tabelSPK);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("SPK (SAW)", jPanel5);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTrans1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrans1ActionPerformed
        try{
            String sql = "INSERT INTO alternatif (alternatif,harga,jp,km,tm,kh,ul) VALUES('"+jAlternatif.getText()+"','"+jHarga.getText()+"','"+jJP.getText()+"','"+jKM.getText()+"','"+jTM.getText()+"','"+jKH.getText()+"','"+jUL.getText()+"')";
            java.sql.Connection conn = (java.sql.Connection) Koneksi.konekKeDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            
            loadAlternatif();
            JOptionPane.showMessageDialog(null, "Alternatif Berhasil Ditambahkan");
            
        } catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong");
        }
    }//GEN-LAST:event_buttonTrans1ActionPerformed

    private void buttonTrans2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrans2ActionPerformed
       try{
            String sql = "INSERT INTO kriteria (kriteria,bobot,label) VALUES('"+jKriteria.getText()+"','"+jBobot.getText()+"','"+jLabel.getSelectedItem()+"')";
            java.sql.Connection conn = (java.sql.Connection) Koneksi.konekKeDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            
            loadAlternatif();
            JOptionPane.showMessageDialog(null, "Alternatif Berhasil Ditambahkan");
            
        } catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong");
        }
    }//GEN-LAST:event_buttonTrans2ActionPerformed

    private void buttonTrans5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrans5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTrans5ActionPerformed

    private void buttonTrans3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrans3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTrans3ActionPerformed

    private void jtabelAlternatifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabelAlternatifMouseClicked

    }//GEN-LAST:event_jtabelAlternatifMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SPK().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private app.ButtonTrans buttonTrans1;
    private app.ButtonTrans buttonTrans2;
    private app.ButtonTrans buttonTrans3;
    private app.ButtonTrans buttonTrans5;
    private javax.swing.JTextField jAlternatif;
    private javax.swing.JTextField jBobot;
    private javax.swing.JTextField jHarga;
    private javax.swing.JTextField jJP;
    private javax.swing.JTextField jKH;
    private javax.swing.JTextField jKM;
    private javax.swing.JTextField jKriteria;
    private javax.swing.JComboBox<String> jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTM;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jUL;
    private javax.swing.JTable jtabelAlternatif;
    private javax.swing.JTable tabelKriteria;
    private javax.swing.JTable tabelNormalisasi;
    private javax.swing.JTable tabelSPK;
    // End of variables declaration//GEN-END:variables

    private void loadAlternatif() {
        try {
            //design tabel
            Object[][] baris = null;
            Object[] header = {"ID", "ALTERNATIF", "HARGA", "JENIS PROSESOR", "KAPASITAS MEMORI", "TIPE MEMORI", "KAPASITAS HARDDISK", "UKURAN LAYAR"};
            DefaultTableModel model = new DefaultTableModel(baris, header);
            jtabelAlternatif.setModel(model);

            //read data from db
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM alternatif";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String alternatif = rs.getString("alternatif");
                String harga = rs.getString("harga");
                String jp = rs.getString("jp");
                String km = rs.getString("km");
                String tm = rs.getString("tm");
                String kh = rs.getString("kh");
                String ul = rs.getString("ul");
                Object[] data = {id, alternatif, harga, jp, km, tm, kh, ul};
                model.addRow(data);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void loadKriteria() {
        try {
            //design tabel
            Object[][] baris = null;
            Object[] header = {"ID", "KRITERIA", "BOBOT", "LABEL"};
            DefaultTableModel model = new DefaultTableModel(baris, header);
            tabelKriteria.setModel(model);

            //read data from db
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM kriteria";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String kriteria = rs.getString("kriteria");
                String bobot = rs.getString("bobot");
                String label = rs.getString("label");

                Object[] data = {id, kriteria, bobot, label};
                model.addRow(data);
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void SPK() {
        try {
            Object[] header = {"NO","ALTERNATIF","BOBOT"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, header);
            tabelSPK.setModel(model); 
            int nomor = 0;
            
            //
            List<Double> L_hasil = new ArrayList();
            
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String q = "SELECT * FROM alternatif";
            ResultSet rs = st.executeQuery(q);
            while (rs.next()) {
                int id = rs.getInt("id");
                String alternatif = rs.getString("alternatif");

                double harga = rs.getDouble("harga");
                double kualitas = rs.getDouble("kualitas");
                double fitur = rs.getDouble("fitur");
                double populer = rs.getDouble("populer");
                double pj = rs.getDouble("pj");
                double keawetan = rs.getDouble("keawetan");

                double pem_harga = label("harga").equals("cost") ? MIN("harga") : MAX("harga");
                double pem_kualitas = label("kualitas").equals("cost") ? MIN("kualitas") : MAX("kualitas");
                double pem_fitur = label("fitur").equals("cost") ? MIN("fitur") : MAX("fitur");
                double pem_populer = label("populer").equals("cost") ? MIN("populer") : MAX("populer");
                double pem_pj = label("pj").equals("cost") ? MIN("pj") : MAX("pj");
                double pem_keawetan = label("keawetan").equals("cost") ? MIN("keawetan") : MAX("keawetan");
                
                double norm_harga = label("harga").equals("cost") ? MIN("harga")/harga : harga/MAX("harga");
                double norm_kualitas = label("kualitas").equals("cost") ? MIN("kualitas")/kualitas : kualitas/MAX("kualitas");
                double norm_fitur = label("fitur").equals("cost") ? MIN("fitur")/fitur : fitur/MAX("fitur");
                double norm_populer = label("populer").equals("cost") ? MIN("populer")/populer : populer/MAX("populer");
                double norm_pj = label("pj").equals("cost") ? MIN("pj")/pj : pj/MAX("pj");
                double norm_keawetan = label("keawetan").equals("cost") ? MIN("keawetan")/keawetan : keawetan/MAX("keawetan");
                
                double hasil = (bobot("harga")*norm_harga)+(bobot("kualitas")*norm_kualitas)+(bobot("fitur")*norm_fitur)+(bobot("populer")*norm_populer)+(bobot("pj")*norm_pj)+(bobot("keawetan")*norm_keawetan);
                L_hasil.add(hasil);
                nomor++;
                Object[] rowData = {nomor,alternatif,hasil};
                model.addRow(rowData);                 
            }
            double bobotTerbaik = Collections.max(L_hasil);
            jLabel1.setText("Bobot terbaik: "+bobotTerbaik); 
            
        } catch (Exception e) {
        }
    }

    private double MIN(String kriteria) {
        double min = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String q = "SELECT MIN(" + kriteria + ") AS min_kriteria FROM alternatif";
            ResultSet rs = st.executeQuery(q);
            while (rs.next()) {
                min = rs.getDouble("min_kriteria");
            }
            return min;

        } catch (Exception e) {
        }
        return min;
    }

    private double MAX(String kriteria) {
        double max = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String q = "SELECT MAX(" + kriteria + ") AS max_kriteria FROM alternatif";
            ResultSet rs = st.executeQuery(q);
            while (rs.next()) {
                max = rs.getDouble("max_kriteria");
            }
            return max;

        } catch (Exception e) {
        }
        return max;
    }

    private String label(String kriteria) {
        String label = "cost";
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String q = "SELECT label FROM kriteria WHERE kriteria='" + kriteria + "'";
            ResultSet rs = st.executeQuery(q);
            while (rs.next()) {
                label = rs.getString("label");
            }
            return label;
        } catch (Exception e) {
        }

        return label;
    }
    
    private double bobot(String kriteria) {
        double bobot = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String q = "SELECT bobot FROM kriteria WHERE kriteria='" + kriteria + "'";
            ResultSet rs = st.executeQuery(q);
            while (rs.next()) {
                bobot = rs.getDouble("bobot");
            }
            return bobot;
        } catch (Exception e) {
        }

        return bobot;
    }
}
